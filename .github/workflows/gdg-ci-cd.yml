name: CI/CD with Gradle

on:
  pull_request:
    branches:      # dev -> main 수동 최신화
      - main
      - develop
  push:
    branches:
      - main     # main 머지 이후에 운영 서버 배포


# 코드의 내용을  action 을 수행하는 주체(Github Actions 의 VM)가 읽을 수 있도록 허용.
permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      # 일단 테스트 제외
      - name: Build with Gradle (without tests)
        run: ./gradlew clean bootJar -x test -Pprofile=${{ secrets.ACTIVE_PROFILE }}
        shell: bash

      - name: Create application.yml
        run: |
          cd ./src/main/resources
          echo "${{ secrets.APPLICATION }}" > ./application-prod.yml
        shell: bash

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image
        run: docker build -f Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/gdg .

      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/gdg

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker rm -f $(sudo docker ps -qa) || true
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/gdg-server:latest
            sudo docker-compose up --build -d 
            sudo docker image prune -f
